---
name: random_order

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push: # only publishes pushes to the main branch to TestPyPI
    # branches: # any integration branch but not tag
    #   - "main"
  # pull_request:
  workflow_call:

jobs:

  build:
    name: "py312"
    runs-on: "ubuntu-22.04"
    # limit potential endless looks like we had with build-containers
    timeout-minutes: 20
    strategy:
      fail-fast: false
    env:
      PYTEST_REQPASS: 453
    environment: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed by setuptools-scm
          submodules: true

      - name: Set pre-commit cache
        uses: actions/cache@v4
        if: ${{ matrix.passed_name == 'lint' }}
        with:
          path: |
            ~/.cache/pre-commit
          key: pre-commit-py312-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install system dependencies
        # remove broken .deb ansible and replace with pip version:
        # https://github.com/actions/virtual-environments/issues/3001
        run: |
          sudo apt-get remove -y ansible \
          && sudo apt-get update \
          && sudo apt-get install -y libvirt-dev python3-cryptography python3-jinja2 python3-yaml virtualenv \
          && pip3 install --user ansible-core ansible-lint\
          && echo "$HOME/.local/bin" >> $GITHUB_PATH
        # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#adding-a-system-path
      - name: Validate that ansible works
        run: |
          ansible --version \
          && virtualenv foo \
          && source foo/bin/activate \
          && ansible --version
      - name: Set up Python "3.12"
        uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: "3.12"

      - name: Install tox
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade "tox>=4.0.0"

      - name: Log installed dists
        run: python3 -m pip freeze --all

      - name: Initialize tox envs random_order
        run: python3 -m tox --notest --skip-missing-interpreters false -vv -e "random_order"
        timeout-minutes: 5 # average is under 1, but macos can be over 3

      - name: Restore pytest-ranking cache
        id: restore-pytest-ranking-cache
        if: always()
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/.tox/${{ github.workflow }}/.pytest_cache/v/pytest_ranking_data
          key: pytest-ranking-cache-${{ github.workflow }}-${{ runner.os }}-py312-${{ github.run_id }}
      
      # sequential run improves browsing experience (almost no speed impact)
      - name: tox -e random_order
        run: python3 -m tox -e "random_order"

      - name: Save pytest-ranking cache
        id: save-pytest-ranking-cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/.tox/${{ github.workflow }}/.pytest_cache/v/pytest_ranking_data
          key: pytest-ranking-cache-${{ github.workflow }}-${{ runner.os }}-py312-${{ github.run_id }}

      
